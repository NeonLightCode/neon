version: '2'
networks:
    micronet:

services:

    nginx-service:
        restart       : always
        build         : ./nginx/
        container_name: nginx-template-test
        networks      : [ micronet ]
        working_dir   : /usr/local/app/nginx-consul-template/
        volumes       :
          - "./nginx/consul.ctmpl:/usr/local/app/nginx-consul-template/consul.ctmpl"
          - "./nginx/nginx-template.sh:/usr/local/app/nginx-consul-template/nginx-template.sh"
        environment   :
          - SERVICE_IGNORE=always
          - CONSUL_AGENT_ADDR=${DOCKER_MACHINE_IP}
          - CONSUL_AGENT_PORT=8500
        ports         :
            - "80:80"
        depends_on    : [  ]
        command       : [ "./nginx-template.sh" ]


    # Consul
    consul-bootstrap:
      image          : consul
      container_name : consul-bootstrap
      command        :
        - "agent"
        - "-server"
        - "-bootstrap"
        - "-ui"
        - "-data-dir=/tmp"
        - "-advertise=${DOCKER_MACHINE_IP}" # Advertise using host environment variable ${DOCKER_MACHINE_IP}
                                            # so that we could do `curl $(docker-machine ip):8500/v1/something/services`
        - "-client=0.0.0.0"
        - "-node=bootstrap-node"
      volumes        : [ "./.tmp/consul-bootstrap:/tmp/consul" ]
      networks       : [ micronet ]
      environment    :
        - SERVICE_IGNORE=always
      ports          :
        - "8400:8400"
        - "8500:8500"
        - "8600:8600/udp"


    # Registrator
    registrator:
      image         : gliderlabs/registrator
      container_name: registrator
      command       : ["-ip", "${DOCKER_MACHINE_IP}", "consul://consul-bootstrap:8500"]
      volumes       : [ "/var/run/docker.sock:/tmp/docker.sock" ]
      networks      : [ micronet ]
      depends_on    : [ consul-bootstrap ]




